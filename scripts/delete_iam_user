#!/bin/bash
#
# Delete the IAM user created by setup_awscreds using default settings.
# Use -i (--interactive) to see confirmation prompts for deletions.

readonly DEFAULT_IAM_USERNAME="sagemaker-k8s-operator-manager"
readonly DEFAULT_POLICY_ARN="arn:aws:iam::aws:policy/AmazonSageMakerFullAccess"

function main() {
    local interactive="false"
    
    # Should change to better flag parsing if we have more flags.
    if [ "$1" == "-i" ] || [ "$1" == "--interactive" ]; then
        interactive="true"
    fi

    if [ "${interactive}" == "true" ]; then
        echo -n "Delete IAM user '${DEFAULT_IAM_USERNAME}'? [y/n] "
        read reply
    else
        reply="y"
    fi

    case "${reply}" in
        n) return ;;
        y) delete_iam_user_and_access_keys "${interactive}" "${DEFAULT_IAM_USERNAME}" "${DEFAULT_POLICY_ARN}" ;;
        *)
            echo "Unknown input"
            exit 1
            ;;
    esac

}

function delete_iam_user_and_access_keys() {
    local interactive="$1"
    local iam_username="$2"
    local policy_arn="$3"

    delete_access_keys "${interactive}" "${iam_username}"
    detach_policy_from_iam_user "${iam_username}" "${policy_arn}"
}

function delete_access_keys() {
    local interactive="$1"
    local iam_username="$2"

    echo "Deleting access keys from IAM user '${iam_username}'"

    output="$(aws iam list-access-keys --user-name "${iam_username}" --output text 2>&1 )"
    
    if [ $? -ne 0 ]; then
        if echo "${output}" | grep -q "NoSuchEntity"; then
            # Username is already deleted.
            echo "Unable to list access keys in use by IAM user '${iam_username}' because it is already deleted."
            return
        else
            echo "Unable to list access keys in use by IAM user '${iam_username}'. Unable to delete."
            echo "${output}"
            exit 1
        fi
    fi

    access_key_count="$(echo "${output}" | grep -i 'accesskeymetadata' | wc -l | awk '{print $1}')"

    if [ "${access_key_count}" -gt "0" ]; then

        if [ "${interactive}" == "true" ]; then
            echo -n "Delete ${access_key_count} IAM access keys that belong to user '${iam_username}'? [y/n] "
            read reply
            case "${reply}" in
                n) return ;;
                y) : ;;
                *)
                    echo "Unknown input. Exiting."
                    exit 1
                    ;;
            esac
        fi

        echo "Deleting ${access_key_count} IAM access keys that belong to user '${iam_username}'"
        while read access_key_id; do 
            output="$(aws iam delete-access-key --access-key-id="${access_key_id}" --user-name="${iam_username}" 2>&1 )"
            if [ $? -ne 0 ]; then
                echo "Unable to delete access key '${access_key_id}':"
                echo "${output}"
            else
                echo "Access key '${access_key_id}' deleted."
            fi

        done < <(echo -n "${output}" | awk '{print $2}')
    else
        echo "No access keys found for IAM user '${iam_username}'."
    fi

}

function detach_policy_from_iam_user() {
    local iam_username="$1"
    local policy_arn="$2"
    
    echo "Detaching policy '${policy_arn}' from IAM user '${iam_username}'"
    output="$(aws iam detach-user-policy --user-name "${iam_username}" --policy-arn "${policy_arn}" 2>&1 )"

    if [ $? -ne 0 ]; then
        if echo "${output}" | grep -q "NoSuchEntity"; then
            # Username is already deleted or policy already detached.
            echo "Policy '${policy_arn}' already detached from user '${iam_username}'."
            return
        else
            echo "Unable to detach policy '${policy_arn}' from user '${iam_username}':"
            echo "${output}"
            exit 1
        fi
    fi
}

main "$@"
